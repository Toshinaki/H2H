/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from "@tanstack/react-router"

import { Route as rootRouteImport } from "./routes/__root"
import { Route as HistoryRouteImport } from "./routes/history"
import { Route as AboutRouteImport } from "./routes/about"
import { Route as IndexRouteImport } from "./routes/index"

const HistoryRoute = HistoryRouteImport.update({
  id: "/history",
  path: "/history",
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: "/about",
  path: "/about",
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/about": typeof AboutRoute
  "/history": typeof HistoryRoute
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/about": typeof AboutRoute
  "/history": typeof HistoryRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  "/": typeof IndexRoute
  "/about": typeof AboutRoute
  "/history": typeof HistoryRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: "/" | "/about" | "/history"
  fileRoutesByTo: FileRoutesByTo
  to: "/" | "/about" | "/history"
  id: "__root__" | "/" | "/about" | "/history"
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  HistoryRoute: typeof HistoryRoute
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/about": {
      id: "/about"
      path: "/about"
      fullPath: "/about"
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/history": {
      id: "/history"
      path: "/history"
      fullPath: "/history"
      preLoaderRoute: typeof HistoryRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module "./routes/index" {
  const createFileRoute: CreateFileRoute<
    "/",
    FileRoutesByPath["/"]["parentRoute"],
    FileRoutesByPath["/"]["id"],
    FileRoutesByPath["/"]["path"],
    FileRoutesByPath["/"]["fullPath"]
  >
}
declare module "./routes/about" {
  const createFileRoute: CreateFileRoute<
    "/about",
    FileRoutesByPath["/about"]["parentRoute"],
    FileRoutesByPath["/about"]["id"],
    FileRoutesByPath["/about"]["path"],
    FileRoutesByPath["/about"]["fullPath"]
  >
}
declare module "./routes/history" {
  const createFileRoute: CreateFileRoute<
    "/history",
    FileRoutesByPath["/history"]["parentRoute"],
    FileRoutesByPath["/history"]["id"],
    FileRoutesByPath["/history"]["path"],
    FileRoutesByPath["/history"]["fullPath"]
  >
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  HistoryRoute: HistoryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
